Запускаем проект на своей машине (все команды применимы к MacOS, Linux "Ubuntu") :

1) Клонируем репозиторий                                                  
git clone https://github.com/saalexworld/TourPackets.git

2) Переходим в папку с проектом                                           
cd TourPackets

3) Устанавливаем виртуальное окружение (для python 3)                     
python3 -m venv venv

4) Запускаем виртуальное окружение                                        
. venv/bin/activate

5) Обновляем систему управления пакетами                                  
pip install --upgrade pip

6) Устанавливаем в виртуальном окружении зависимости для проекта          
pip install -r req.txt

7) Создаем в рабочей директории TourPackets файл со скрытыми настройками
touch .env

8) Открываем файл со крытыми настройками
nano .env

9) Заполняем файл со скрытыми настройками 

SECRET_KEY = django-insecure-40n^+h%z)gfp@1cxr=n8!zc5c+reo##2u07)h_mps3s9*ivlto
DEBUG = False

USER = <name your user>
PASSWORD = <your password>
NAME = (<name_db> -> название базы данных любое -> ваща база дынных для проета)
ENGINE = django.db.backends.postgresql
PORT = 5432
HOST = localhost

EMAIL_BACKEND = django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST = smtp.gmail.com
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = <your emeil@gmail.com>
EMAIL_HOST_PASSWORD = <your emeil app code> (необходимо создать в настройках gmail)***

      *** - как настроить EMAIL_HOST_PASSWORD
          - настройте двухэтапную аутентификацию, так как без нее не реализовать данные настройки
          - перейти в свой личный "Google account"
          - перейти в раздел "Безопасность"
          - найти раздел/окно "Вход в аккаунт Google"
          - найти и перейти в данном разделе/окне кнопку "Пароли приложений"
          - в окне "Ваши пароли приложений" выбрать "Приложение" -> выбрать "Другое (введите название)" -> ввести название: QDPro
          - в окне "Ваши пароли приложений" выбрать "Устройство" -> выбрать "Другое (введите название)" -> ничего не вводим здесь
          - нажимаем на кнопку "Создать"
          - появляется окно с PASSWORD который необходимо сохранить! ВАЖНО! сохраните код надежно, так как больше вы его не увидите!
          - всё! вы получили PASSWORD и можете его вставить в раздел EMAIL_HOST_PASSWORD = <your emeil app code>

8) Создаём базу данных (для postgreSQL)(<name_db> -> название базы данных любое  -> ваща база дынных для проета)                                   
psql 
create database <name_db> ;
\q

9) Делаем миграции в создания базу данных                                 
python manage.py makemigrations && python manage.py migrate

10) Создаём суперюзера для управления админ-панелью                        
python manage.py createsuperuser

11) Запускаем локальный сервер                                             
python manage.py runserver

12)Запускаем celery (для удобства испоьзуйте второе окно в консоле)       
celery -A Tours worker --loglevel=INFO

13)Доступ к админ-панели по адресу                                        
http://127.0.0.1:8000/admin/    


ВАЖНО! Еслиы вы сделали git clone https://github.com/saalexworld/TourPackets.git данного проекта и в дальнейшем решите сделать git pull origin <branch_name> то перед использованием этой команды обязательно проверьте url прикреплённого репозитория при помощи вот такой команды                                             

cat .git/config


Если вы получили в описании url = https://github.com/saalexworld/TourPackets.git то необходимо сменить url репозитория при помощи вот такой команды                                             

git remote set-url origin https://github.com/<...name repository owner...>


Проверьте смену репозитория                                              

cat .git/config



Основные команды для использования GIT:
1)
…or create a new repository on the command line
echo "# TourPackets" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M master
git remote add origin https://github.com/saalexworld/TourPackets.git
git push -u origin master

2)
…or push an existing repository from the command line
git remote add origin https://github.com/saalexworld/TourPackets.git
git branch -M master
git push -u origin master
